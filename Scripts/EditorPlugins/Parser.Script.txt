#RequireContext CMapEditorPlugin
#Include "TextLib" as TextLib


#Struct InputStream {
	Text string;
	Integer pos;
	Integer line;
	Integer col;
}

#Struct Token {
	Text type;
	Text value;
}

declare InputStream g_input;

Text stream_peek() {
	return TextLib::SubString(g_input.string, g_input.pos, 1);
}

Text stream_next() {
  declare Text ch = stream_peek();
	g_input.pos += 1;
  if (ch == "\n" || ch == "\r") {
		g_input.line += 1;
		g_input.col = 0;
	} else {
		g_input.col += 1;
	}
	return ch;
}

Boolean stream_eof() {
  return stream_peek() == "";
}


Token[] tokenize() {
	declare Token[] tokens = [];
	declare Integer i;
	for (i, 0, 3) {
		tokens.add(Token { value = stream_next(), type = "CHARACTER" });
	}
	return tokens;
}

main()
{
	log("Parsing!!");
	declare Token[] tokens;
	g_input = InputStream { string = "#test", pos = 0, line = 0, col = 0 };
	
	tokens = tokenize();
	log("Parsed!!");
	log(tokens);
	log("<--Parsed!!");
	

	while(True) {
		yield;
	}
}
