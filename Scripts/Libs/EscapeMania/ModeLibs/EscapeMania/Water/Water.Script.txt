#Include "Libs/Zrx/ModeLibs/Common/VirtualPickups/VirtualPickups.Script.txt" as VirtualPickups
#Include "Libs/EscapeMania/ModeLibs/EscapeMania/Items/Items.Script.txt" as Items

#Const C_WaterEntranceTag "Water_Entrance"
#Const C_BottleLandmarkTag "Water_Item"
#Const C_MediaTrackerClip "Water"

declare Boolean[CSmPlayer] G_InWater;
declare Boolean G_IsComplete;

Void Init() {
	G_IsComplete = False;
}

Void CompletePuzzle() {
	// Create Bottle Item
	foreach (Landmark in MapLandmarks) {
		if (Landmark.Tag == C_BottleLandmarkTag) {
			Items::CreateBottleItem(Landmark);
		}
	}

	// Tell players something is happening
	foreach (Player in Players) {
		declare UI = UIManager.GetUI(Player);
		UI.QueueMessage(1000, 1, CUIConfig::EMessageDisplay::Big, "");
	}
}

Void OnChange(CSmPlayer Player, Boolean GoesInside) {
	if (G_IsComplete) {
		return;
	}

	declare Integer countInWater = 0;
	foreach (Player => InWater in G_InWater) {
		if (InWater) {
			countInWater += 1;
		}
	}

	// Delete the bottle on the landmark	
	foreach (Landmark in MapLandmarks) {
		if (Landmark.Tag == C_BottleLandmarkTag) {
			foreach (Pickup in VirtualPickups::GetByHolder(Landmark)) {
				if (Items::IsBottleItem(Pickup)) {
					VirtualPickups::Destroy(Pickup.Id);
				}
			}
		}
	}

	if (countInWater == 3) {
		CompletePuzzle();
	} else if (GoesInside) {
		declare UI = UIManager.GetUI(Player);
		UI.QueueMessage(1000, 1, CUIConfig::EMessageDisplay::Big, "");
	}
}

Void OnRespawn(CSmPlayer Player) {
	if (G_InWater.get(Player, False)) {
		declare UI = UIManager.GetUI(Player);
		UI.UISequence_CustomMTClip = "";
	}
	G_InWater[Player] = False;
	OnChange(Player, False);
}

Void OnEnterWater(CSmPlayer Player) {
	declare Boolean HasHelmet = False;
	declare Boolean HasPowerSource = False;
	foreach (Pickup in VirtualPickups::GetByHolder(Player)) {
		if (Items::IsHelmetItem(Pickup)) {
			HasHelmet = True;
		}
		if (Items::IsPowerSourceItem(Pickup)) {
			HasPowerSource = True;
		}
	}
	if (!(HasHelmet && HasPowerSource)) {
		declare UI = UIManager.GetUI(Player);
		UI.UISequence_CustomMTClip = C_MediaTrackerClip;
	}

	G_InWater[Player] = True;
	OnChange(Player, True);
}

Void Loop() {
	foreach (Event in PendingEvents) {
		switch (Event.Type) {
			case CSmModeEvent::EType::OnPlayerTriggersWaypoint: {
				if (Event.Landmark.Tag == C_WaterEntranceTag) {
					OnEnterWater(Event.Player);
				} else if (Event.Landmark.Tag == C_BottleLandmarkTag) {
					// Pickup
					declare VirtualPickups::K_VirtualPickup[] LandmarkPickups = VirtualPickups::GetByHolder(Event.Landmark);
					if (LandmarkPickups.count > 0) {
						declare VirtualPickups::K_VirtualPickup Pickup = LandmarkPickups[0];
						if (Items::IsBottleItem(Pickup)) {
							VirtualPickups::SetHolder(Pickup.Id, Event.Player);
							G_IsComplete = True;			
						}
					}
				}
			}
		}
	}
}

